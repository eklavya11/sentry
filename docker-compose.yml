version: '3'
services:
  bot:
    container_name: sentry
    build:
      context: ./sentry/
      dockerfile: Dockerfile-dev
    volumes:
      - ./sentry:/usr/sentry/
    depends_on:
      - postgres
      - redis
    ports:
      - 8080:8080
    links:
      - redis
  frontend:
    container_name: frontend
    build:
      context: ./frontend/
      dockerfile: Dockerfile-dev
    volumes:
      - ./frontend:/usr/frontend/
    ports:
      - 3000:3000
    links:
      - bot
    depends_on:
      - bot
  postgres:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      POSTGRES_DB: sentry
    ports:
      - 5432:5432
    volumes:
      - ./.postgres:/var/lib/postgresql/data
  adminer:
    image: adminer
    restart: always
    ports:
      - 9000:8080
    links:
      - postgres
  redis:
    image: redis
    command: redis-server --requirepass password
    container_name: cache
    restart: always
    ports:
      - 6379:6379
volumes:
  data:
